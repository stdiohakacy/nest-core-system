version: '3'
services:
    postgres:
        image: postgres
        container_name: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: postgres
            TZ: 'GMT'
            PGTZ: 'GMT'
        ports:
            - '5432:5432'
        volumes:
            - postgres:/data/postgres
            - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
        env_file:
            - .env

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4
        ports:
            - '8080:80'
        # volumes:
        #     - /data/pgadmin:/root/.pgadmin
        env_file:
            - .env
        links:
            - postgres

    redis:
        image: redis
        container_name: redis
        restart: always
        ports:
            - '6379:6379'
        volumes:
            - redis:/data/redis
        env_file:
            - .env
    minio:
        image: minio/minio
        container_name: minio
        ports:
            - '9000:9000'
            - '9001:9001'
        volumes:
            - ./storage:/data
        environment:
            MINIO_ROOT_USER: minio_admin
            MINIO_ROOT_PASSWORD: minio_admin
        command: server --console-address ":9001" /data

    es01:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es01
        environment:
            - node.name=es01
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es02,es03
            - cluster.initial_master_nodes=es01,es02,es03,es04
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch_data01:/usr/share/elasticsearch/data
        ports:
            - 9200:9200
        networks:
            - elk-network
    es02:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es02
        environment:
            - node.name=es02
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es03
            - cluster.initial_master_nodes=es01,es02,es03,es04
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch_data02:/usr/share/elasticsearch/data
        networks:
            - elk-network
    es03:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
        container_name: es03
        environment:
            - node.name=es03
            - cluster.name=es-docker-cluster
            - discovery.seed_hosts=es01,es02
            - cluster.initial_master_nodes=es01,es02,es03,es04
            - bootstrap.memory_lock=true
            - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - elasticsearch_data03:/usr/share/elasticsearch/data
        networks:
            - elk-network

    # kibana:
    #     image: docker.elastic.co/kibana/kibana:7.9.1
    #     container_name: kibana
    #     environment:
    #         ELASTICSEARCH_HOSTS: 'http://es01:9200'
    #     ports:
    #         - '5601:5601'
    #     networks:
    #         - elk-network

    rabbitmq:
        image: rabbitmq:management
        container_name: rabbitmq
        ports:
            - '5672:5672'
            - '15672:15672'
        environment:
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=admin
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
volumes:
    postgres:
        driver: local
    pgadmin:
        driver: local
    redis:
        driver: local
    elasticsearch_data01:
        driver: local
    elasticsearch_data02:
        driver: local
    elasticsearch_data03:
        driver: local
    rabbitmq_data:
        driver: local

networks:
    elk-network:
        driver: bridge
